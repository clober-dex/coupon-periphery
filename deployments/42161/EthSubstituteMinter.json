{
  "address": "0x2fB42Aaa3b32Fb5DdD86E4CbCff9d9643359A757",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "weth",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISubstitute",
          "name": "substitute",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x67e2f03526e1adf34897e0fdddc51928ce25f2128e79cd9247363e13f082a152",
  "receipt": {
    "to": null,
    "from": "0x1f88547fc4E1dC1a924AEaaDE65108EEb9DdEEd4",
    "contractAddress": "0x2fB42Aaa3b32Fb5DdD86E4CbCff9d9643359A757",
    "transactionIndex": 2,
    "gasUsed": "4124674",
    "logsBloom": "0x
    "blockHash": "0x82c66d252a58c962d964c32e2b0da0112fc29ea8d547113ac09c47fca0a13f97",
    "transactionHash": "0x67e2f03526e1adf34897e0fdddc51928ce25f2128e79cd9247363e13f082a152",
    "logs": [],
    "blockNumber": 153264481,
    "cumulativeGasUsed": "6747732",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"
  ],
  "numDeployments": 1,
  "solcInputHash": "6ee56211a49e2a040139762a5247a157",
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"contract ISubstitute\",\"name\":\"substitute\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EthSubstituteMinter.sol\":\"EthSubstituteMinter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"contracts/EthSubstituteMinter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\n\\npragma solidity ^0.8.0;\\n\\nimport {IEthSubstituteMinter} from \\\"./interfaces/IEthSubstituteMinter.sol\\\";\\nimport {ISubstitute} from \\\"./interfaces/ISubstitute.sol\\\";\\nimport {IWETH9} from \\\"./external/weth/IWETH9.sol\\\";\\n\\ncontract EthSubstituteMinter is IEthSubstituteMinter {\\n    IWETH9 private immutable _weth;\\n\\n    constructor(address weth) {\\n        _weth = IWETH9(weth);\\n    }\\n\\n    function mint(ISubstitute substitute, address recipient) external payable {\\n        _weth.deposit{value: msg.value}();\\n        _weth.approve(address(substitute), msg.value);\\n        substitute.mint(msg.value, recipient);\\n    }\\n}\\n\",\"keccak256\":\"0x457443a94cc87a480789c6dde08ff9d7a5ee3ba92ea3cb50e4335e584a6e9058\",\"license\":\"GPL-2.0-or-later\"},\"contracts/external/weth/IWETH9.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\n\\npragma solidity ^0.8.0;\\n\\nimport {IERC20Metadata} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\ninterface IWETH9 is IERC20Metadata {\\n    event Deposit(address indexed dst, uint256 wad);\\n    event Withdrawal(address indexed src, uint256 wad);\\n\\n    function deposit() external payable;\\n\\n    function withdraw(uint256 wad) external;\\n}\\n\",\"keccak256\":\"0x2ee71d25c3fbf9b954291eb2c76b1149fc9cf6456944019adbb6b051ff1bda11\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IEthSubstituteMinter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\n\\npragma solidity ^0.8.0;\\n\\nimport {ISubstitute} from \\\"./ISubstitute.sol\\\";\\n\\ninterface IEthSubstituteMinter {\\n    function mint(ISubstitute substitute, address recipient) external payable;\\n}\\n\",\"keccak256\":\"0x73f7d2130012d6fefcd9d25cb4df4567489a5491b8b419ea0460e12acdd84a84\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/ISubstitute.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\n\\npragma solidity ^0.8.0;\\n\\ninterface ISubstitute {\\n    event SetTreasury(address indexed newTreasury);\\n    event Claim(address indexed treasury, uint256 adminYield);\\n\\n    error InvalidToken();\\n    error ValueTransferFailed();\\n\\n    function treasury() external view returns (address);\\n\\n    function underlyingToken() external view returns (address);\\n\\n    function mint(uint256 amount, address to) external;\\n\\n    function burn(uint256 amount, address to) external;\\n\\n    function claim() external;\\n\\n    function mintableAmount() external view returns (uint256);\\n\\n    function burnableAmount() external view returns (uint256);\\n\\n    function setTreasury(address newTreasury) external;\\n\\n    function withdrawLostToken(address token, address recipient) external;\\n}\\n\",\"keccak256\":\"0xa6d6ff8684f2d6b02d5a1a249a48bb07d39333f68e4d93e64ed551f4bdbf93f1\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161034c38038061034c83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516102bb61009160003960008181603a015261010101526102bb6000f3fe60806040526004361061001e5760003560e01c8063ee1fe2ad14610023575b600080fd5b610036610031366004610223565b610038565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156100a057600080fd5b505af11580156100b4573d6000803e3d6000fd5b50506040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301523460248301527f000000000000000000000000000000000000000000000000000000000000000016935063095ea7b3925060440190506020604051808303816000875af115801561014e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610172919061025c565b506040517f94bf804d00000000000000000000000000000000000000000000000000000000815234600482015273ffffffffffffffffffffffffffffffffffffffff82811660248301528316906394bf804d90604401600060405180830381600087803b1580156101e257600080fd5b505af11580156101f6573d6000803e3d6000fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461022057600080fd5b50565b6000806040838503121561023657600080fd5b8235610241816101fe565b91506020830135610251816101fe565b809150509250929050565b60006020828403121561026e57600080fd5b8151801515811461027e57600080fd5b939250505056fea2646970667358221220b4a73bf0b45792c84ddbee58fff2cdf8f90545ba83211e002187e732b1dc52e364736f6c63430008170033",
  "deployedBytecode": "0x60806040526004361061001e5760003560e01c8063ee1fe2ad14610023575b600080fd5b610036610031366004610223565b610038565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156100a057600080fd5b505af11580156100b4573d6000803e3d6000fd5b50506040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301523460248301527f000000000000000000000000000000000000000000000000000000000000000016935063095ea7b3925060440190506020604051808303816000875af115801561014e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610172919061025c565b506040517f94bf804d00000000000000000000000000000000000000000000000000000000815234600482015273ffffffffffffffffffffffffffffffffffffffff82811660248301528316906394bf804d90604401600060405180830381600087803b1580156101e257600080fd5b505af11580156101f6573d6000803e3d6000fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461022057600080fd5b50565b6000806040838503121561023657600080fd5b8235610241816101fe565b91506020830135610251816101fe565b809150509250929050565b60006020828403121561026e57600080fd5b8151801515811461027e57600080fd5b939250505056fea2646970667358221220b4a73bf0b45792c84ddbee58fff2cdf8f90545ba83211e002187e732b1dc52e364736f6c63430008170033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}